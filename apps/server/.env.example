# ------------------------------------------------------------------
# Example .env for Colanode Server
# Copy this file to ".env" and adjust the values as needed.
# ------------------------------------------------------------------
#
# NEW: JSON Configuration Support
# --------------------------------
# You can now configure the server via config.json (see config.json).
# Recommended pattern: put non-sensitive values in config.json and sensitive
# values (e.g. secrets or credentials) as environment variables, referenced from
# config.json using env pointers.
#
# Precedence at runtime:
#   1) Environment variables (highest, always win)
#   2) config.json (base configuration)
#   3) Schema defaults (lowest)
#
# In config.json, reference env vars using:
#   env://VAR_NAME       → required; throws if missing
#   env://VAR_NAME?      → optional; omitted if missing
# Example: { "postgres": { "url": "env://POSTGRES_URL" } }
#
# Notes:
# - Keys starting with "_" in config.json are ignored (use them for comments).
# - Environment variables remain fully supported for backward compatibility;
#   if both env and config.json set the same value, env wins.
# - Place config.json at the repo root or apps/server/.
# ------------------------------------------------------------------

# ───────────────────────────────────────────────────────────────
# General Node/Server Config (optional overrides)
# ───────────────────────────────────────────────────────────────
# NODE_ENV=production
# SERVER_NAME="Colanode Local"
# SERVER_AVATAR=
# SERVER_MODE=standalone          # 'standalone' or 'cluster'
# SERVER_PATH_PREFIX=
# SERVER_CORS_ORIGIN=http://localhost:4000
# SERVER_CORS_MAX_AGE=7200

# ───────────────────────────────────────────────────────────────
# Logging Config
# Possible values: 'trace', 'debug', 'info', 'warn', 'error', 'fatal', 'silent'
# Default is 'info'
# ───────────────────────────────────────────────────────────────
# LOGGING_LEVEL=info

# ───────────────────────────────────────────────────────────────
# Account Configuration
# ───────────────────────────────────────────────────────────────
# ACCOUNT_VERIFICATION_TYPE=automatic   # automatic | manual | email
# ACCOUNT_OTP_TIMEOUT=600               # seconds
# ACCOUNT_GOOGLE_ENABLED=true
# ACCOUNT_GOOGLE_CLIENT_ID=            # used by config.json via env://
# ACCOUNT_GOOGLE_CLIENT_SECRET=        # used by config.json via env://

# ───────────────────────────────────────────────────────────────
# Workspace Configuration
# ───────────────────────────────────────────────────────────────
# Optional, leave empty for no limits
# WORKSPACE_STORAGE_LIMIT=10737418240   # 10 GB
# WORKSPACE_MAX_FILE_SIZE=104857600     # 100 MB

# ───────────────────────────────────────────────────────────────
# User Configuration
# ───────────────────────────────────────────────────────────────
# USER_STORAGE_LIMIT=10737418240   # 10 GB
# USER_MAX_FILE_SIZE=104857600     # 100 MB

# ───────────────────────────────────────────────────────────────
# PostgreSQL Configuration
# ───────────────────────────────────────────────────────────────
# Required: config.json references this via env://POSTGRES_URL
POSTGRES_URL=postgres://colanode_user:postgrespass123@localhost:5432/colanode_db
# POSTGRES_SSL_REJECT_UNAUTHORIZED=false
# POSTGRES_SSL_CA=         # used by config.json via env://?
# POSTGRES_SSL_KEY=        # used by config.json via env://?
# POSTGRES_SSL_CERT=       # used by config.json via env://?

# ───────────────────────────────────────────────────────────────
# Redis Configuration
# ───────────────────────────────────────────────────────────────
# Required: config.json references this via env://REDIS_URL
REDIS_URL=redis://:your_valkey_password@localhost:6379/0
# Optional configurations

# REDIS_DB=0
# REDIS_JOBS_NAME=jobs
# REDIS_JOBS_PREFIX=colanode
# REDIS_TUS_LOCK_PREFIX=colanode:tus:lock
# REDIS_TUS_KV_PREFIX=colanode:tus:kv
# REDIS_EVENTS_CHANNEL=events

# ───────────────────────────────────────────────────────────────
# Storage Configuration
# Supported types: 's3', 'file', 'gcs', 'azure'
# ───────────────────────────────────────────────────────────────
# STORAGE_TYPE=file

# ───────────────────────────────────────────────────────────────
# S3 Storage Configuration (MinIO, AWS S3, or S3-compatible)
# Required when STORAGE_TYPE=s3
# ───────────────────────────────────────────────────────────────
# STORAGE_S3_ENDPOINT=http://localhost:9000
# STORAGE_S3_ACCESS_KEY=minioadmin
# STORAGE_S3_SECRET_KEY=your_minio_password
# STORAGE_S3_BUCKET=colanode
# STORAGE_S3_REGION=us-east-1
# STORAGE_S3_FORCE_PATH_STYLE=true

# ───────────────────────────────────────────────────────────────
# File Storage Configuration (Local Disk)
# Required when STORAGE_TYPE=file
# ───────────────────────────────────────────────────────────────
# STORAGE_FILE_DIRECTORY=./colanode

# ───────────────────────────────────────────────────────────────
# Google Cloud Storage (GCS) Configuration
# Required when STORAGE_TYPE=gcs
# ───────────────────────────────────────────────────────────────
# STORAGE_GCS_BUCKET=your-gcs-bucket-name
# STORAGE_GCS_PROJECT_ID=your-gcp-project-id
# STORAGE_GCS_CREDENTIALS=/path/to/service-account-key.json

# ───────────────────────────────────────────────────────────────
# Azure Blob Storage Configuration
# Required when STORAGE_TYPE=azure
# ───────────────────────────────────────────────────────────────
# STORAGE_AZURE_ACCOUNT=your-storage-account-name
# STORAGE_AZURE_ACCOUNT_KEY=your-storage-account-key
# STORAGE_AZURE_CONTAINER_NAME=colanode

# ───────────────────────────────────────────────────────────────
# SMTP Configuration
# ───────────────────────────────────────────────────────────────
# SMTP_ENABLED=false
# SMTP_HOST=smtp                 # used by config.json via env://?
# SMTP_PORT=1025
# SMTP_SECURE=false
# SMTP_USER=                     # used by config.json via env://?
# SMTP_PASSWORD=                 # used by config.json via env://?
# SMTP_EMAIL_FROM=your_email@example.com   # used by config.json via env://?
# SMTP_NAME=Colanode

# ───────────────────────────────────────────────────────────────
# AI / Models / Embeddings (enable assistant)
# All are optional unless you enable AI in config.json or via env.
# When enabled, provider API keys are expected via env and referenced
# from config.json using env://...
# ───────────────────────────────────────────────────────────────
# AI_ENABLED=false
# AI_NODE_EMBEDDING_DELAY=5000
# AI_DOCUMENT_EMBEDDING_DELAY=10000

# Providers
# OPENAI_ENABLED=false
# OPENAI_API_KEY=                 # used by config.json via env://?
# GOOGLE_ENABLED=false
# GOOGLE_API_KEY=                 # used by config.json via env://?

# Langfuse (optional tracing)
# LANGFUSE_ENABLED=false
# LANGFUSE_PUBLIC_KEY=            # used by config.json via env://?
# LANGFUSE_SECRET_KEY=            # used by config.json via env://?
# LANGFUSE_BASE_URL=https://cloud.langfuse.com

# Models (optional overrides)
# QUERY_REWRITE_PROVIDER=openai
# QUERY_REWRITE_MODEL=gpt-4o
# QUERY_REWRITE_TEMPERATURE=0.5
# RESPONSE_PROVIDER=openai
# RESPONSE_MODEL=gpt-4o
# RESPONSE_TEMPERATURE=0.5
# RERANK_PROVIDER=openai
# RERANK_MODEL=gpt-4o
# RERANK_TEMPERATURE=0.5
# SUMMARIZATION_PROVIDER=openai
# SUMMARIZATION_MODEL=gpt-4o
# SUMMARIZATION_TEMPERATURE=0.5
# CHUNK_CONTEXT_PROVIDER=openai
# CHUNK_CONTEXT_MODEL=gpt-4o
# CHUNK_CONTEXT_TEMPERATURE=0.5
# NO_CONTEXT_PROVIDER=openai
# NO_CONTEXT_MODEL=gpt-4o
# NO_CONTEXT_TEMPERATURE=0.5
# INTENT_RECOGNITION_PROVIDER=openai
# INTENT_RECOGNITION_MODEL=gpt-4o
# INTENT_RECOGNITION_TEMPERATURE=0.5
# DATABASE_FILTER_PROVIDER=openai
# DATABASE_FILTER_MODEL=gpt-4o
# DATABASE_FILTER_TEMPERATURE=0.5

# Embeddings (optional overrides)
# EMBEDDING_PROVIDER=openai
# EMBEDDING_MODEL=text-embedding-3-large
# EMBEDDING_DIMENSIONS=2000
# EMBEDDING_API_KEY=               # used by config.json via env://?
# EMBEDDING_BATCH_SIZE=50

# Chunking/Retrieval (optional overrides)
# CHUNK_DEFAULT_CHUNK_SIZE=1000
# CHUNK_DEFAULT_OVERLAP=200
# CHUNK_ENHANCE_WITH_CONTEXT=false
# RETRIEVAL_HYBRID_SEARCH_SEMANTIC_WEIGHT=0.7
# RETRIEVAL_HYBRID_SEARCH_KEYWORD_WEIGHT=0.3
# RETRIEVAL_HYBRID_SEARCH_MAX_RESULTS=20

# ───────────────────────────────────────────────────────────────
# Background Jobs (optional overrides)
# ───────────────────────────────────────────────────────────────
# JOBS_NODE_UPDATES_MERGE_ENABLED=false
# JOBS_NODE_UPDATES_MERGE_CRON="0 5 */2 * * *"
# JOBS_NODE_UPDATES_MERGE_BATCH_SIZE=500
# JOBS_NODE_UPDATES_MERGE_MERGE_WINDOW=3600
# JOBS_NODE_UPDATES_MERGE_CUTOFF_WINDOW=7200

# JOBS_DOCUMENT_UPDATES_MERGE_ENABLED=false
# JOBS_DOCUMENT_UPDATES_MERGE_CRON="0 5 */2 * * *"
# JOBS_DOCUMENT_UPDATES_MERGE_BATCH_SIZE=500
# JOBS_DOCUMENT_UPDATES_MERGE_MERGE_WINDOW=3600
# JOBS_DOCUMENT_UPDATES_MERGE_CUTOFF_WINDOW=7200

# JOBS_UPLOADS_CLEAN_ENABLED=false
# JOBS_UPLOADS_CLEAN_CRON="0 5 */2 * * *"
